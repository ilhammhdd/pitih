meta {
  name: all-real-account
  type: http
  seq: 1
}

get {
  url: {{host}}/real-account?perPage=10&page=1
  body: none
  auth: none
}

params:query {
  perPage: 10
  page: 1
  ~name: pay
}

tests {
  test("expect 200 OK", function() {
    expect(res.getStatus()).eql(200);
  });
  
  test("expect paginated all real account", function() {
    const respBody = res.getBody();
    expect(respBody).to.have.property("page")
      .to.be.a("number");
    expect(respBody).to.have.property("perPage")
      .to.be.a("number");
    expect(respBody).to.have.property("total")
      .to.be.a("number");
    expect(respBody).to.have.property("entities")
      .to.be.an("array");
    if (respBody.entities.length > 0) {
      respBody.entities.forEach(entity => {
        expect(entity).to.have.property("id")
          .to.be.a("string");
        expect(entity).to.have.property("name")
          .to.be.a("string");
        expect(entity).to.have.property("currentBalance")
          .to.be.a("number");
        expect(entity).to.have.property("createdBy")
          .to.be.a("string");
      })
    }
  });
  
}
