meta {
  name: all-logical-account
  type: http
  seq: 2
}

get {
  url: {{host}}/logical-account?perPage=10&page=1&name=bahan%20makan&realAccountName=pay
  body: none
  auth: none
}

params:query {
  perPage: 10
  page: 1
  name: bahan makan
  realAccountName: pay
  ~realAccountId: 271f4c5b-0a1e-47a0-8262-c2c1d84b8f6c
}

tests {
  test("expect 200 OK", function() {
    expect(res.getStatus()).eql(200);
  });
  
  test("expect paginated all logical account", function() {
    const respBody = res.getBody();
    expect(respBody).to.have.property("page")
      .to.be.a("number");
    expect(respBody).to.have.property("perPage")
      .to.be.a("number");
    expect(respBody).to.have.property("total")
      .to.be.a("number");
    expect(respBody).to.have.property("entities")
      .to.be.an("array");
    if (respBody.entities.length > 0) {
      respBody.entities.forEach(entity => {
        expect(entity).to.have.property("id")
          .to.be.a("string");
        expect(entity).to.have.property("name")
          .to.be.a("string");
        expect(entity).to.have.property("currentBalance")
          .to.be.a("number");
        expect(entity).to.have.property("createdBy")
          .to.be.a("string");
      })
    }
  });
  
}

docs {
  ### Query param priority
  1. `realAccountId`, this will find exact match
  1. `realAccountName`, this will find contains match
}
