// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package translation

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"en_US": &dictionary{index: en_USIndex, data: en_USData},
		"id_ID": &dictionary{index: id_IDIndex, data: id_IDData},
	}
	fallback := language.MustParse("en-US")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"Hello from Pitih": 0,
}

var en_USIndex = []uint32{ // 2 elements
	0x00000000, 0x00000011,
} // Size: 32 bytes

const en_USData string = "\x02Hello from Pitih"

var id_IDIndex = []uint32{ // 2 elements
	0x00000000, 0x00000010,
} // Size: 32 bytes

const id_IDData string = "\x02Halo dari Pitih"

// Total table size 97 bytes (0KiB); checksum: 96273DAE
